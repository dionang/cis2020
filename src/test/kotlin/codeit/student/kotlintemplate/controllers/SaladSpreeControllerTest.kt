package codeit.student.kotlintemplate.controllers

import org.assertj.core.api.Assertions.assertThat
import org.junit.jupiter.api.Test

internal class SaladSpreeControllerTest {
    @Test
    fun `test case 1`() {
        val expected = 24
        val actual = SaladSpreeController.getMinAmountSpent(
            numberOfSalads = 3,
            saladPricesStreetMap = listOf(
                listOf("12", "12", "3", "X", "3"),
                listOf("23", "X", "X", "X", "3"),
                listOf("33", "21", "X", "X", "X"),
                listOf("9", "12", "3", "X", "X"),
                listOf("X", "X", "X", "4", "5")
            )
        )

        assertThat(actual).isEqualTo(expected)
    }

    @Test
    fun `test case 2`() {
        val expected = 0
        val actual = SaladSpreeController.getMinAmountSpent(
            numberOfSalads = 3,
            saladPricesStreetMap = listOf(
                listOf("X", "X", "2"),
                listOf("2", "3", "X"),
                listOf("X", "3", "2")
            )
        )

        assertThat(actual).isEqualTo(expected)
    }

    @Test
    fun `test case 3`() {
        val expected = 5
        val actual = SaladSpreeController.getMinAmountSpent(
            numberOfSalads = 2,
            saladPricesStreetMap = listOf(
                listOf("2", "3", "X", "2"),
                listOf("4", "X", "X", "4"),
                listOf("3", "2", "X", "X"),
                listOf("X", "X", "X", "5")
            )
        )

        assertThat(actual).isEqualTo(expected)
    }

    @Test
    fun `test case 4`() {
        val expected = 3
        val actual = SaladSpreeController.getMinAmountSpent(
            numberOfSalads = 2,
            saladPricesStreetMap = listOf(
                listOf("2", "3", "X", "2"),
                listOf("4", "1", "X", "4"),
                listOf("3", "2", "X", "X"),
                listOf("X", "X", "X", "5")
            )
        )

        assertThat(actual).isEqualTo(expected)
    }

    @Test
    fun `test case 5`() {
//        val expected = 5
        val actual = SaladSpreeController.getMinAmountSpent(
            numberOfSalads = 5,
            saladPricesStreetMap = listOf(
                listOf("X","3","15","2","10","19","X","15","13","20","7","10","X","15","2","16","X","8","X","19","17","9","16"),
                listOf("4","3","X","14","X","1","18","15","17","4","14","X","18","15","19","20","4","X","11","6","9","17","8"),
                listOf("15","18","17","4","18","15","10","8","X","15","X","5","11","X","X","8","10","X","7","9","12","5","7"),
                listOf("3","19","1","X","X","2","X","X","X","X","3","X","X","19","X","10","1","X","12","17","7","14","2"),
                listOf("8","4","10","X","16","9","X","1","3","5","9","X","8","16","10","6","2","20","4","X","X","16","20"),
                listOf("14","18","16","11","X","X","6","17","X","12","20","5","16","X","17","20","6","17","12","5","4","14","X"),
                listOf("2","6","15","16","19","19","10","X","16","19","2","6","X","6","2","14","X","X","14","11","7","10","7"),
                listOf("X","19","4","X","X","3","4","4","15","7","X","10","7","14","8","20","20","X","7","1","X","20","19"),
                listOf("1","16","15","19","5","6","9","1","17","20","20","X","11","7","16","17","16","6","18","11","12","4","4"),
                listOf("2","18","X","16","X","14","17","10","11","2","19","16","14","8","1","X","2","1","X","14","12","8","X"),
                listOf("3","9","20","9","10","3","16","19","12","20","20","7","13","X","X","5","1","X","5","6","9","10","6"),
                listOf("2","X","8","15","17","18","6","X","8","X","18","7","X","1","12","2","X","13","5","18","6","15","15"),
                listOf("14","12","X","17","3","4","11","10","12","7","X","13","12","7","7","9","5","20","X","X","14","X","14"),
                listOf("X","16","12","14","X","17","4","X","13","1","5","11","3","13","14","13","12","5","17","17","3","15","X"),
                listOf("X","8","19","19","7","11","7","3","14","14","X","X","7","3","7","7","16","20","1","11","5","15","13"),
                listOf("5","X","12","3","20","19","19","4","7","17","12","16","17","8","5","5","20","X","1","X","12","14","8"),
                listOf("15","X","X","13","X","X","X","9","9","16","X","17","8","20","X","20","18","4","17","13","16","4","12"),
                listOf("2","4","X","16","13","5","15","3","X","11","3","13","20","2","20","X","12","8","X","8","20","X","10"),
                listOf("20","X","3","12","2","11","10","3","1","X","7","10","2","X","X","X","14","6","20","14","14","5","X"),
                listOf("15","4","X","4","8","16","12","15","11","7","3","1","10","12","9","12","X","7","15","X","18","14","18"),
                listOf("X","15","15","1","19","3","16","X","10","5","X","7","5","4","10","17","6","X","14","12","17","X","3"),
                listOf("2","X","13","X","3","10","9","18","X","13","12","8","18","X","6","16","11","12","19","11","18","X","14"),
                listOf("X","16","10","13","18","16","9","X","X","12","X","X","4","14","5","3","20","13","19","4","3","19","2"),
                listOf("8","8","8","1","1","10","2","8","8","X","7","15","7","9","X","11","15","X","15","11","3","14","10"),
                listOf("2","16","8","8","15","2","8","18","20","16","8","6","2","X","3","2","11","X","18","2","13","X","X"),
                listOf("X","10","9","15","20","X","14","15","16","12","1","3","2","17","1","19","X","14","X","14","X","12","9"),
                listOf("8","15","1","18","13","15","X","13","X","9","17","19","X","12","X","2","2","8","12","19","1","19","15"),
                listOf("18","X","13","X","17","3","X","X","X","10","6","X","17","5","X","9","2","8","X","14","17","8","3"),
                listOf("17","3","9","1","12","3","X","3","3","X","16","X","9","1","1","X","7","19","11","X","11","X","8"),
                listOf("13","20","10","2","X","X","16","X","16","1","X","X","15","13","2","12","16","6","12","16","8","6","9"),
                listOf("20","18","11","2","1","1","18","X","20","1","18","X","15","15","2","1","X","10","11","X","X","17","X")
            )
        )
        println(actual)
//        assertThat(actual).isEqualTo(expected)
    }

}